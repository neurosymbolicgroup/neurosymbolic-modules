{
  "id":200,
  "name":"ZIPWITH-MAX",
  "type":"list",
  "bit":"11111",
  "constraint":
  [
  "(declare-const IN0_LEN_SPEC Int)(declare-const OUT_LEN_SPEC Int)(assert (= IN0_LEN_SPEC OUT_LEN_SPEC))",
  "(declare-const IN1_LEN_SPEC Int)(declare-const OUT_LEN_SPEC Int)(assert (= IN1_LEN_SPEC OUT_LEN_SPEC))",
  "(define-fun max2 ((x1 Int) (x2 Int)) Int (ite (>= x1 x2) x1 x2))(declare-const IN0_MAX_SPEC Int)(declare-const IN1_MAX_SPEC Int)(declare-const OUT_MAX_SPEC Int)(assert (= OUT_MAX_SPEC (max2 IN0_MAX_SPEC IN1_MAX_SPEC)))",
  "(define-fun max2 ((x1 Int) (x2 Int)) Int (ite (>= x1 x2) x1 x2))(declare-const IN0_MIN_SPEC Int)(declare-const IN1_MIN_SPEC Int)(declare-const OUT_MIN_SPEC Int)(assert (>= OUT_MIN_SPEC (max2 IN0_MIN_SPEC IN1_MIN_SPEC)))",
  "(define-fun max2 ((x1 Int) (x2 Int)) Int (ite (>= x1 x2) x1 x2))(declare-const IN0_FIRST_SPEC Int)(declare-const IN1_FIRST_SPEC Int)(declare-const OUT_FIRST_SPEC Int)(assert (= OUT_FIRST_SPEC (max2 IN0_FIRST_SPEC IN1_FIRST_SPEC)))",
  "(define-fun max2 ((x1 Int) (x2 Int)) Int (ite (>= x1 x2) x1 x2))(declare-const IN0_LAST_SPEC Int)(declare-const IN1_LAST_SPEC Int)(declare-const OUT_LAST_SPEC Int)(assert (= OUT_LAST_SPEC (max2 IN0_LAST_SPEC IN1_LAST_SPEC)))"
  ]
}
